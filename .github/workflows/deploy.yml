name: Deploy SubashaVentures Blazor WASM to GitHub Pages

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Always update project structure on every push
  update-structure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Update Project Structure
        run: |
          echo "Updating project structure documentation..."
          
          # Create Others directory if it doesn't exist
          mkdir -p "Others"
          
          # Generate comprehensive project structure
          {
            echo "Project Structure Documentation - SubashaVentures"
            echo "Generated: $(date -u)"
            echo "Repository: ${{ github.repository }}"
            echo "Commit: ${{ github.sha }}"
            echo "Branch: ${{ github.ref_name }}"
            echo "=================================="
            echo
            echo "Source Files:"
            echo "============"
            find . -type f \( \
              -name "*.cs" -o \
              -name "*.razor" -o \
              -name "*.csproj" -o \
              -name "*.sln" -o \
              -name "*.json" -o \
              -name "*.css" -o \
              -name "*.scss" -o \
              -name "*.js" -o \
              -name "*.html" -o \
              -name "*.md" -o \
              -name "*.yml" \
            \) -not -path "*/bin/*" \
              -not -path "*/obj/*" \
              -not -path "*/.git/*" \
              -not -path "*/node_modules/*" | \
            sed 's|^\./||' | sort
            echo
            echo "Directory Structure:"
            echo "==================="
            find . -type d \
              -not -path "*/bin" \
              -not -path "*/bin/*" \
              -not -path "*/obj" \
              -not -path "*/obj/*" \
              -not -path "*/.git" \
              -not -path "*/.git/*" \
              -not -path "*/node_modules" \
              -not -path "*/node_modules/*" | \
            sed 's|^\./||' | \
            sort | \
            sed 's|[^/]*/|  |g' | \
            sed 's|^|./|'
            echo
            echo "File Count Summary:"
            echo "=================="
            for ext in cs razor csproj sln json css js html; do
              count=$(find . -name "*.$ext" -not -path "*/bin/*" -not -path "*/obj/*" -not -path "*/.git/*" | wc -l)
              if [ "$count" -gt 0 ]; then
                printf "%-10s: %d files\n" ".$ext" "$count"
              fi
            done
          } > "Others/ProjectStructure.txt"
          
          echo "Project structure documentation completed"

      - name: Commit Updated Project Structure
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action - SubashaVentures"
          
          if [ -f "Others/ProjectStructure.txt" ]; then
            if ! git diff --quiet "Others/ProjectStructure.txt" 2>/dev/null; then
              git add "Others/ProjectStructure.txt"
              git commit -m "Auto-update project structure [skip ci]"
              git push
              echo "Project structure committed successfully"
            else
              echo "No changes detected in project structure"
            fi
          fi

  # Build and deploy - only runs with --deploy, --publish, or --release keywords
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: update-structure
    if: |
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && 
      (contains(github.event.head_commit.message, '--deploy') || 
       contains(github.event.head_commit.message, '--publish') || 
       contains(github.event.head_commit.message, '--release') ||
       contains(github.event.head_commit.message, '--DEPLOY') || 
       contains(github.event.head_commit.message, '--PUBLISH') || 
       contains(github.event.head_commit.message, '--RELEASE'))
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0.x'

      - name: Restore Dependencies
        run: |
          echo "=== Restoring NuGet packages ==="
          dotnet restore

      - name: Build Project
        run: |
          echo "=== Building SubashaVentures ==="
          dotnet build --configuration Release --no-restore

      - name: Publish
        run: |
          echo "=== Publishing Blazor WASM ==="
          dotnet publish --configuration Release --no-build --output ./dist

      - name: Prepare for GitHub Pages
        run: |
          echo "=== Preparing deployment files ==="
          mkdir -p ./pages
          
          if [ -d "./dist/wwwroot" ]; then
            cp -r ./dist/wwwroot/* ./pages/
            echo "✅ wwwroot contents copied"
          else
            echo "❌ ERROR: wwwroot not found"
            exit 1
          fi
          
          # Add .nojekyll to prevent Jekyll processing
          touch ./pages/.nojekyll
          echo "✅ .nojekyll created"
          
          # Create 404.html for SPA routing
          cp ./pages/index.html ./pages/404.html
          echo "✅ 404.html created"
          
          # Update base href for GitHub Pages
          # Change this to match your repository name: /repository-name/
          REPO_NAME="${{ github.event.repository.name }}"
          sed -i "s|<base href=\"/\" />|<base href=\"/$REPO_NAME/\" />|g" ./pages/index.html
          sed -i "s|<base href=\"/\" />|<base href=\"/$REPO_NAME/\" />|g" ./pages/404.html
          echo "✅ Base href updated to /$REPO_NAME/"
          
          # Verify deployment files
          echo "=== Verifying deployment ==="
          echo "Index.html exists: $([ -f ./pages/index.html ] && echo '✅' || echo '❌')"
          echo "404.html exists: $([ -f ./pages/404.html ] && echo '✅' || echo '❌')"
          echo ".nojekyll exists: $([ -f ./pages/.nojekyll ] && echo '✅' || echo '❌')"
          
          # Check for framework files
          if ls ./pages/_framework/*.wasm 1> /dev/null 2>&1; then
            echo "✅ WASM files found"
          else
            echo "❌ No WASM files found"
          fi
          
          if ls ./pages/_framework/*.dll 1> /dev/null 2>&1; then
            echo "✅ DLL files found"
          else
            echo "❌ No DLL files found"
          fi

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./pages

  # Deploy to GitHub Pages
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: |
      (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') && 
      (contains(github.event.head_commit.message, '--deploy') || 
       contains(github.event.head_commit.message, '--publish') || 
       contains(github.event.head_commit.message, '--release') ||
       contains(github.event.head_commit.message, '--DEPLOY') || 
       contains(github.event.head_commit.message, '--PUBLISH') || 
       contains(github.event.head_commit.message, '--RELEASE'))
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Show skip message when deployment not triggered
  deployment-skipped:
    runs-on: ubuntu-latest
    needs: update-structure
    if: |
      !(contains(github.event.head_commit.message, '--deploy') || 
        contains(github.event.head_commit.message, '--publish') || 
        contains(github.event.head_commit.message, '--release') ||
        contains(github.event.head_commit.message, '--DEPLOY') || 
        contains(github.event.head_commit.message, '--PUBLISH') || 
        contains(github.event.head_commit.message, '--RELEASE'))
    
    steps:
      - name: Deployment Skipped
        run: |
          echo "ℹ️ GitHub Pages deployment was skipped"
          echo ""
          echo "To trigger deployment, include one of these keywords in your commit message:"
          echo "  --deploy   (build and deploy to GitHub Pages)"
          echo "  --publish  (build and deploy to GitHub Pages)"
          echo "  --release  (build and deploy to GitHub Pages)"
          echo ""
          echo "Current commit: ${{ github.event.head_commit.message }}"
