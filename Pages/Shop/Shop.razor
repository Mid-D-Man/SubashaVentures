@page "/shop"
@page "/shop/{category}"
@using SubashaVentures.Layout.Shop
@using SubashaVentures.Components.Shared.Cards
@layout ShopLayout

<div class="shop-page">
    <!-- Page Header -->
    <div class="shop-header-section">
        <div class="header-content">
            <h1 class="shop-title">
                @if (!string.IsNullOrEmpty(Category) && Category != "all")
                {
                    @GetCategoryDisplayName(Category)
                }
                else
                {
                    <text>All Products</text>
                }
            </h1>
            <p class="shop-subtitle">
                @TotalProducts products found
            </p>
        </div>
        
        <!-- View Toggle & Sort (Desktop) -->
        <div class="shop-controls desktop-only">
            <div class="view-toggle">
                <button class="view-btn @(viewMode == "grid" ? "active" : "")" 
                        @onclick='() => SetViewMode("grid")'
                        title="Grid View">
                    ‚äû
                </button>
                <button class="view-btn @(viewMode == "list" ? "active" : "")" 
                        @onclick='() => SetViewMode("list")'
                        title="List View">
                    ‚ò∞
                </button>
            </div>
            
            <select class="sort-select" @onchange="HandleSortChange">
                <option value="relevance">Sort: Relevance</option>
                <option value="price-low">Price: Low to High</option>
                <option value="price-high">Price: High to Low</option>
                <option value="rating">Customer Rating</option>
                <option value="newest">Newest First</option>
                <option value="popular">Most Popular</option>
            </select>
        </div>
    </div>

    <!-- Active Filters -->
    @if (activeFilters.Count > 0)
    {
        <div class="active-filters">
            <span class="filters-label">Active Filters:</span>
            <div class="filter-tags">
                @foreach (var filter in activeFilters)
                {
                    <span class="filter-tag">
                        @filter
                        <button class="remove-filter" @onclick="() => RemoveFilter(filter)">‚úï</button>
                    </span>
                }
            </div>
            <button class="clear-all-filters" @onclick="ClearAllFilters">
                Clear All
            </button>
        </div>
    }

    <!-- Loading State -->
    @if (isLoading)
    {
        <div class="loading-container">
            <div class="loading-spinner"></div>
            <p class="loading-text">Loading products...</p>
        </div>
    }
    else if (products.Count == 0)
    {
        <!-- Empty State -->
        <div class="empty-state">
            <div class="empty-icon">üì¶</div>
            <h3 class="empty-title">No products found</h3>
            <p class="empty-text">Try adjusting your filters or search terms</p>
            <button class="reset-btn" @onclick="ResetFilters">
                Reset Filters
            </button>
        </div>
    }
    else
    {
        <!-- Products Grid/List -->
        <div class="products-container @viewMode-view">
            @foreach (var product in products)
            {
                <ProductCard 
                    Name="@product.Name"
                    Price="@product.Price"
                    OriginalPrice="@product.OriginalPrice"
                    ImageUrl="@product.ImageUrl"
                    Rating="@product.Rating"
                    ReviewCount="@product.ReviewCount"
                    IsOnSale="@product.IsOnSale"
                    Discount="@product.Discount"
                />
            }
        </div>

        <!-- Pagination -->
        <div class="pagination-container">
            <button class="pagination-btn" 
                    disabled="@(currentPage == 1)"
                    @onclick="PreviousPage">
                ‚Üê Previous
            </button>
            
            <div class="pagination-pages">
                @for (int i = 1; i <= totalPages; i++)
                {
                    var pageNumber = i;
                    <button class="page-btn @(currentPage == pageNumber ? "active" : "")"
                            @onclick="() => GoToPage(pageNumber)">
                        @pageNumber
                    </button>
                }
            </div>
            
            <button class="pagination-btn" 
                    disabled="@(currentPage == totalPages)"
                    @onclick="NextPage">
                Next ‚Üí
            </button>
        </div>
    }
</div>
