@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<nav class="admin-nav-menu @(isExpanded ? "expanded" : "collapsed") @(isMobileOpen ? "mobile-open" : "")"
     @ref="navElement"
     @onmouseenter="HandleMouseEnter"
     @onmouseleave="HandleMouseLeave">
    
    <!-- Navigation Header -->
    <div class="nav-header">
        <div class="nav-brand">
            <span class="brand-icon">ðŸŒŸ</span>
            <span class="brand-text">Subasha Admin</span>
        </div>
        
        <button class="nav-toggle-btn desktop-only" 
                @onclick="TogglePinned"
                title="@(isPinned ? "Unpin sidebar" : "Pin sidebar")">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                @if (isPinned)
                {
                    <path d="M10 2L12 8H16L12 12V18L10 16L8 18V12L4 8H8L10 2Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                }
                else
                {
                    <path d="M10 2L12 8H16L12 12V18L10 16L8 18V12L4 8H8L10 2Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" opacity="0.5"/>
                }
            </svg>
        </button>

        <button class="nav-close-btn mobile-only" @onclick="CloseMobileNav">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
            </svg>
        </button>
    </div>

    <!-- Navigation Items -->
    <div class="nav-items">
        @foreach (var section in NavigationSections)
        {
            @if (!string.IsNullOrEmpty(section.Title) && isExpanded)
            {
                <div class="nav-section-title">@section.Title</div>
            }

            @foreach (var item in section.Items)
            {
                @if (item.Children?.Any() == true)
                {
                    <!-- Expandable Item -->
                    <div class="nav-item-group @(expandedGroups.Contains(item.Id) ? "expanded" : "")">
                        <button class="nav-item @(IsCurrentPath(item.Path) ? "active" : "")"
                                @onclick="() => ToggleGroup(item.Id)">
                            <span class="nav-item-icon">@GetIconSvg(item.Icon)</span>
                            <span class="nav-item-label">@item.Label</span>
                            <span class="nav-item-badge" style="display: @(item.Badge > 0 ? "flex" : "none")">@item.Badge</span>
                            <span class="nav-item-arrow">
                                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                                    <path d="M6 4L10 8L6 12" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                            </span>
                        </button>
                        
                        <div class="nav-item-children">
                            @foreach (var child in item.Children)
                            {
                                <a href="@child.Path" 
                                   class="nav-item child @(IsCurrentPath(child.Path) ? "active" : "")"
                                   @onclick="() => HandleNavigation(child.Path)">
                                    <span class="nav-item-icon">@GetIconSvg(child.Icon)</span>
                                    <span class="nav-item-label">@child.Label</span>
                                    <span class="nav-item-badge" style="display: @(child.Badge > 0 ? "flex" : "none")">@child.Badge</span>
                                </a>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <!-- Single Item -->
                    <a href="@item.Path" 
                       class="nav-item @(IsCurrentPath(item.Path) ? "active" : "")"
                       @onclick="() => HandleNavigation(item.Path)">
                        <span class="nav-item-icon">@GetIconSvg(item.Icon)</span>
                        <span class="nav-item-label">@item.Label</span>
                        <span class="nav-item-badge" style="display: @(item.Badge > 0 ? "flex" : "none")">@item.Badge</span>
                    </a>
                }
            }
        }
    </div>

    <!-- Navigation Footer -->
    <div class="nav-footer">
        <a href="/admin/settings" class="nav-item">
            <span class="nav-item-icon">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <circle cx="10" cy="10" r="3" stroke="currentColor" stroke-width="1.5"/>
                    <path d="M16 10C16 10.5 15.7 11 15.2 11.2L14.5 11.5C14.2 11.6 14 11.8 13.9 12.1L13.7 12.7C13.6 13 13.6 13.3 13.8 13.5L14.3 14C14.7 14.4 14.8 15 14.5 15.5L13.8 16.5C13.5 17 12.9 17.1 12.4 16.8L11.9 16.5C11.6 16.4 11.3 16.4 11.1 16.5L10.5 16.8C10.2 16.9 10 17.2 10 17.5V18.2C10 18.7 9.6 19 9.1 19H7.9C7.4 19 7 18.7 7 18.2V17.5C7 17.2 6.8 16.9 6.5 16.8L5.9 16.5C5.6 16.4 5.3 16.4 5.1 16.5L4.6 16.8C4.1 17.1 3.5 17 3.2 16.5L2.5 15.5C2.2 15 2.3 14.4 2.7 14L3.2 13.5C3.4 13.3 3.4 13 3.3 12.7L3.1 12.1C3 11.8 2.8 11.6 2.5 11.5L1.8 11.2C1.3 11 1 10.5 1 10V8.8C1 8.3 1.3 7.8 1.8 7.6L2.5 7.3C2.8 7.2 3 7 3.1 6.7L3.3 6.1C3.4 5.8 3.4 5.5 3.2 5.3L2.7 4.8C2.3 4.4 2.2 3.8 2.5 3.3L3.2 2.3C3.5 1.8 4.1 1.7 4.6 2L5.1 2.3C5.3 2.4 5.6 2.4 5.9 2.3L6.5 2C6.8 1.9 7 1.6 7 1.3V0.6C7 0.1 7.4 -0.2 7.9 -0.2H9.1C9.6 -0.2 10 0.1 10 0.6V1.3C10 1.6 10.2 1.9 10.5 2L11.1 2.3C11.4 2.4 11.7 2.4 11.9 2.3L12.4 2C12.9 1.7 13.5 1.8 13.8 2.3L14.5 3.3C14.8 3.8 14.7 4.4 14.3 4.8L13.8 5.3C13.6 5.5 13.6 5.8 13.7 6.1L13.9 6.7C14 7 14.2 7.2 14.5 7.3L15.2 7.6C15.7 7.8 16 8.3 16 8.8V10Z" stroke="currentColor" stroke-width="1.5"/>
                </svg>
            </span>
            <span class="nav-item-label">Settings</span>
        </a>
    </div>
</nav>

<!-- Mobile Overlay -->
@if (isMobileOpen)
{
    <div class="mobile-overlay" @onclick="CloseMobileNav"></div>
}