@* SidePanel.razor *@
@using SubashaVentures.Components.Shared.Buttons

<div class="side-panel-overlay @(IsOpen ? "active" : "")" @onclick="HandleOverlayClick">
    <div class="side-panel @(IsOpen ? "active" : "")" @onclick:stopPropagation="true">
        <div class="panel-content">
            <!-- Panel Header -->
            <div class="panel-header">
                <div class="panel-title">
                    <span class="panel-icon">SV</span>
                    <span class="panel-brand">SubashaVentures</span>
                </div>
                <button class="panel-close" @onclick="ClosePanel" aria-label="Close menu">
                    âœ•
                </button>
            </div>

            <!-- Navigation Links -->
            <div class="panel-nav">
                <div class="nav-section">
                    <h4 class="section-title">Shop</h4>
                    <a class="nav-link" href="@HomeDirectory" @onclick="() => HandleNavClick(HomeDirectory)">
                        <span class="nav-text">Home</span>
                    </a>
                    <a class="nav-link" href="@ShopDirectory" @onclick="() => HandleNavClick(ShopDirectory)">
                        <span class="nav-text">All Products</span>
                    </a>
                    <a class="nav-link" href="@CategoriesDirectory" @onclick="() => HandleNavClick(CategoriesDirectory)">
                        <span class="nav-text">Categories</span>
                    </a>
                    <a class="nav-link" href="@DealsDirectory" @onclick="() => HandleNavClick(DealsDirectory)">
                        <span class="nav-text">Deals & Sales</span>
                    </a>
                </div>

                <div class="nav-section">
                    <h4 class="section-title">Categories</h4>
                    <a class="nav-link" href="@MenDirectory" @onclick="() => HandleNavClick(MenDirectory)">
                        <span class="nav-text">Men's Fashion</span>
                    </a>
                    <a class="nav-link" href="@WomenDirectory" @onclick="() => HandleNavClick(WomenDirectory)">
                        <span class="nav-text">Women's Fashion</span>
                    </a>
                    <a class="nav-link" href="@ChildrenDirectory" @onclick="() => HandleNavClick(ChildrenDirectory)">
                        <span class="nav-text">Kids & Baby</span>
                    </a>
                    <a class="nav-link" href="@HomeLivingDirectory" @onclick="() => HandleNavClick(HomeLivingDirectory)">
                        <span class="nav-text">Home & Living</span>
                    </a>
                </div>

                <div class="nav-section">
                    <h4 class="section-title">Support</h4>
                    <a class="nav-link" href="@AboutDirectory" @onclick="() => HandleNavClick(AboutDirectory)">
                        <span class="nav-text">About Us</span>
                    </a>
                    <a class="nav-link" href="@ContactDirectory" @onclick="() => HandleNavClick(ContactDirectory)">
                        <span class="nav-text">Contact</span>
                    </a>
                    <a class="nav-link" href="@HelpDirectory" @onclick="() => HandleNavClick(HelpDirectory)">
                        <span class="nav-text">Help Center</span>
                    </a>
                    <a class="nav-link" href="@TrackOrderDirectory" @onclick="() => HandleNavClick(TrackOrderDirectory)">
                        <span class="nav-text">Track Orders</span>
                    </a>
                </div>
            </div>

            <!-- User Actions -->
            <div class="panel-actions">
                @if (IsLoggedIn)
                {
                    <div class="user-info">
                        <div class="user-avatar">@UserName.Substring(0, 1).ToUpper()</div>
                        <div class="user-details">
                            <span class="user-name">@UserName</span>
                            <span class="user-email">@UserEmail</span>
                        </div>
                    </div>
                    <button class="action-btn primary" @onclick="() => HandleActionClick(ActionType.Profile)">
                        <span class="btn-text">My Profile</span>
                    </button>
                    <button class="action-btn secondary" @onclick="() => HandleActionClick(ActionType.Logout)">
                        <span class="btn-text">Sign Out</span>
                    </button>
                }
                else
                {
                    <button class="action-btn primary" @onclick="() => HandleActionClick(ActionType.SignIn)">
                        <span class="btn-text">Sign In</span>
                    </button>
                    <button class="action-btn secondary" @onclick="() => HandleActionClick(ActionType.Register)">
                        <span class="btn-text">Create Account</span>
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    // Navigation constants
    private const string HomeDirectory = "/";
    private const string ShopDirectory = "/shop";
    private const string CategoriesDirectory = "/categories";
    private const string DealsDirectory = "/deals";
    private const string MenDirectory = "/men";
    private const string WomenDirectory = "/women";
    private const string ChildrenDirectory = "/children";
    private const string HomeLivingDirectory = "/home";
    private const string AboutDirectory = "/about";
    private const string ContactDirectory = "/contact";
    private const string HelpDirectory = "/help";
    private const string TrackOrderDirectory = "/track-order";

    [Parameter] public bool IsOpen { get; set; } = false;
    [Parameter] public EventCallback<bool> IsOpenChanged { get; set; }
    [Parameter] public string SearchQuery { get; set; } = "";
    [Parameter] public EventCallback<string> SearchQueryChanged { get; set; }
    [Parameter] public bool IsLoggedIn { get; set; } = false;
    [Parameter] public string UserName { get; set; } = "";
    [Parameter] public string UserEmail { get; set; } = "";
    [Parameter] public EventCallback<ActionType> OnActionClick { get; set; }
    [Parameter] public EventCallback<string> OnNavigate { get; set; }
    [Parameter] public EventCallback<string> OnSearch { get; set; }

    public enum ActionType
    {
        SignIn,
        Register,
        Profile,
        Logout
    }

    private async Task ClosePanel()
    {
        IsOpen = false;
        await IsOpenChanged.InvokeAsync(IsOpen);
    }

    private async Task HandleOverlayClick()
    {
        await ClosePanel();
    }

    private async Task HandleNavClick(string url)
    {
        await ClosePanel();
        if (OnNavigate.HasDelegate)
        {
            await OnNavigate.InvokeAsync(url);
        }
    }

    private async Task HandleActionClick(ActionType action)
    {
        await ClosePanel();
        if (OnActionClick.HasDelegate)
        {
            await OnActionClick.InvokeAsync(action);
        }
    }
}
